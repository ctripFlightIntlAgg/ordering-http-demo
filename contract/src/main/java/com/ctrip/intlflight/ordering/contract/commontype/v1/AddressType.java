/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 地址
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AddressType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:commontype:v1", propOrder = {
    "province",
    "city",
    "district",
    "addr",
    "postCode"
})
@SuppressWarnings("all")
public class AddressType implements Serializable {

    private static final long serialVersionUID = 1L;

    public AddressType(
        String province, 
        String city, 
        String district, 
        String addr, 
        String postCode) {
        this.province = province;
        this.city = city;
        this.district = district;
        this.addr = addr;
        this.postCode = postCode;
    }

    public AddressType() {
    }

    @JsonProperty("Province")
    @XmlElement(name = "Province")
    private String province;

    @JsonProperty("City")
    @XmlElement(name = "City")
    private String city;

    @JsonProperty("District")
    @XmlElement(name = "District")
    private String district;

    @JsonProperty("Addr")
    @XmlElement(name = "Addr")
    private String addr;

    @JsonProperty("PostCode")
    @XmlElement(name = "PostCode")
    private String postCode;

    public String getProvince() {
        return this.province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getDistrict() {
        return this.district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    public String getAddr() {
        return this.addr;
    }

    public void setAddr(String addr) {
        this.addr = addr;
    }

    public String getPostCode() {
        return this.postCode;
    }

    public void setPostCode(String postCode) {
        this.postCode = postCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final AddressType other = (AddressType)obj;
        return
            Objects.equal(this.province, other.province) && 
            Objects.equal(this.city, other.city) && 
            Objects.equal(this.district, other.district) && 
            Objects.equal(this.addr, other.addr) && 
            Objects.equal(this.postCode, other.postCode);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.province);
        result = 31 * result + Objects.hashCode(this.city);
        result = 31 * result + Objects.hashCode(this.district);
        result = 31 * result + Objects.hashCode(this.addr);
        result = 31 * result + Objects.hashCode(this.postCode);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("province", province)
            .add("city", city)
            .add("district", district)
            .add("addr", addr)
            .add("postCode", postCode)
            .toString();
    }

}
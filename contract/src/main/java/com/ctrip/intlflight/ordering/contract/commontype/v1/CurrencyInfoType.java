/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 币种信息
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CurrencyInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:commontype:v1", propOrder = {
    "currency",
    "exchangeRate"
})
@SuppressWarnings("all")
public class CurrencyInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public CurrencyInfoType(
        String currency, 
        BigDecimal exchangeRate) {
        this.currency = currency;
        this.exchangeRate = exchangeRate;
    }

    public CurrencyInfoType() {
        this.exchangeRate = new BigDecimal(0);
    }

    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @JsonProperty("ExchangeRate")
    @XmlElement(name = "ExchangeRate")
    private BigDecimal exchangeRate;

    /**
     * 币种单位
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 汇率(对人民币汇率)
     */
    public BigDecimal getExchangeRate() {
        return this.exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final CurrencyInfoType other = (CurrencyInfoType)obj;
        return
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.exchangeRate, other.exchangeRate);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.exchangeRate);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("currency", currency)
            .add("exchangeRate", exchangeRate)
            .toString();
    }

}
/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 附加费用详情
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExtraFeeDetail", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:commontype:v1", propOrder = {
    "carrierFee",
    "ctripFee",
    "consolidatorFee",
    "displayType"
})
@SuppressWarnings("all")
public class ExtraFeeDetail implements Serializable {

    private static final long serialVersionUID = 1L;

    public ExtraFeeDetail(
        BigDecimal carrierFee, 
        BigDecimal ctripFee, 
        BigDecimal consolidatorFee, 
        int displayType) {
        this.carrierFee = carrierFee;
        this.ctripFee = ctripFee;
        this.consolidatorFee = consolidatorFee;
        this.displayType = displayType;
    }

    public ExtraFeeDetail() {
        this.carrierFee = new BigDecimal(0);
        this.ctripFee = new BigDecimal(0);
        this.consolidatorFee = new BigDecimal(0);
    }

    @JsonProperty("CarrierFee")
    @XmlElement(name = "CarrierFee")
    private BigDecimal carrierFee;

    @JsonProperty("CtripFee")
    @XmlElement(name = "CtripFee")
    private BigDecimal ctripFee;

    @JsonProperty("ConsolidatorFee")
    @XmlElement(name = "ConsolidatorFee")
    private BigDecimal consolidatorFee;

    @JsonProperty("DisplayType")
    @XmlElement(name = "DisplayType")
    private int displayType;

    /**
     * 航空公司服务费
     */
    public BigDecimal getCarrierFee() {
        return this.carrierFee;
    }

    public void setCarrierFee(BigDecimal carrierFee) {
        this.carrierFee = carrierFee;
    }

    /**
     * 携程服务费
     */
    public BigDecimal getCtripFee() {
        return this.ctripFee;
    }

    public void setCtripFee(BigDecimal ctripFee) {
        this.ctripFee = ctripFee;
    }

    /**
     * 合作票台服务费
     */
    public BigDecimal getConsolidatorFee() {
        return this.consolidatorFee;
    }

    public void setConsolidatorFee(BigDecimal consolidatorFee) {
        this.consolidatorFee = consolidatorFee;
    }

    /**
     * 服务费展示类型， 1：合并，需合并到客规费中；2：分开，需以文字备注的形式展示
     */
    public int getDisplayType() {
        return this.displayType;
    }

    public void setDisplayType(int displayType) {
        this.displayType = displayType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ExtraFeeDetail other = (ExtraFeeDetail)obj;
        return
            Objects.equal(this.carrierFee, other.carrierFee) && 
            Objects.equal(this.ctripFee, other.ctripFee) && 
            Objects.equal(this.consolidatorFee, other.consolidatorFee) && 
            Objects.equal(this.displayType, other.displayType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.carrierFee);
        result = 31 * result + Objects.hashCode(this.ctripFee);
        result = 31 * result + Objects.hashCode(this.consolidatorFee);
        result = 31 * result + Objects.hashCode(this.displayType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("carrierFee", carrierFee)
            .add("ctripFee", ctripFee)
            .add("consolidatorFee", consolidatorFee)
            .add("displayType", displayType)
            .toString();
    }

}
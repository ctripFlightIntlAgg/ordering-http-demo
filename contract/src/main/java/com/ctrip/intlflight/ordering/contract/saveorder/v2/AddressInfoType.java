/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 地址信息
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AddressInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "countryCode",
    "stateCode",
    "cityName",
    "address",
    "zipCode"
})
@SuppressWarnings("all")
public class AddressInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public AddressInfoType(
        String countryCode, 
        String stateCode, 
        String cityName, 
        String address, 
        String zipCode) {
        this.countryCode = countryCode;
        this.stateCode = stateCode;
        this.cityName = cityName;
        this.address = address;
        this.zipCode = zipCode;
    }

    public AddressInfoType() {
    }

    @JsonProperty("CountryCode")
    @XmlElement(name = "CountryCode")
    private String countryCode;

    @JsonProperty("StateCode")
    @XmlElement(name = "StateCode")
    private String stateCode;

    @JsonProperty("CityName")
    @XmlElement(name = "CityName")
    private String cityName;

    @JsonProperty("Address")
    @XmlElement(name = "Address")
    private String address;

    @JsonProperty("ZipCode")
    @XmlElement(name = "ZipCode")
    private String zipCode;

    /**
     * 国家二字码
     */
    public String getCountryCode() {
        return this.countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    /**
     * 省市(州)代码
     */
    public String getStateCode() {
        return this.stateCode;
    }

    public void setStateCode(String stateCode) {
        this.stateCode = stateCode;
    }

    /**
     * 城市名
     */
    public String getCityName() {
        return this.cityName;
    }

    public void setCityName(String cityName) {
        this.cityName = cityName;
    }

    /**
     * 详细地址
     */
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * 邮政编码
     */
    public String getZipCode() {
        return this.zipCode;
    }

    public void setZipCode(String zipCode) {
        this.zipCode = zipCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final AddressInfoType other = (AddressInfoType)obj;
        return
            Objects.equal(this.countryCode, other.countryCode) && 
            Objects.equal(this.stateCode, other.stateCode) && 
            Objects.equal(this.cityName, other.cityName) && 
            Objects.equal(this.address, other.address) && 
            Objects.equal(this.zipCode, other.zipCode);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.countryCode);
        result = 31 * result + Objects.hashCode(this.stateCode);
        result = 31 * result + Objects.hashCode(this.cityName);
        result = 31 * result + Objects.hashCode(this.address);
        result = 31 * result + Objects.hashCode(this.zipCode);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("countryCode", countryCode)
            .add("stateCode", stateCode)
            .add("cityName", cityName)
            .add("address", address)
            .add("zipCode", zipCode)
            .toString();
    }

}
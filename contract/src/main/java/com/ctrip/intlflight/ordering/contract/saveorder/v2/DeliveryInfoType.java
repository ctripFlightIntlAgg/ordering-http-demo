/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.ctrip.intlflight.ordering.contract.commontype.v1.DeliveryTypeType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         配送方式：不需要行程单PJN/邮寄行程单PJS/市内配送CTripDelivery(SND)/客户自取之间是互斥关系，所以均为可选项，应该只有其中一个，而且必须有一个被填充。
 *         全部为游票支付时,处理方式为现金,送票方式为不需要行程单及发票OnlinePurchaseOnlyType/OP
 *       
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DeliveryInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "deliveryType",
    "payTypeCanUse",
    "thirdPartyDelivery"
})
@SuppressWarnings("all")
public class DeliveryInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public DeliveryInfoType(
        DeliveryTypeType deliveryType,
        String payTypeCanUse, 
        ThirdPartyDeliveryType thirdPartyDelivery) {
        this.deliveryType = deliveryType;
        this.payTypeCanUse = payTypeCanUse;
        this.thirdPartyDelivery = thirdPartyDelivery;
    }

    public DeliveryInfoType() {
        this.deliveryType = DeliveryTypeType.values()[0];
    }

    @JsonProperty("DeliveryType")
    @XmlElement(name = "DeliveryType")
    private DeliveryTypeType deliveryType;

    @JsonProperty("PayTypeCanUse")
    @XmlElement(name = "PayTypeCanUse")
    private String payTypeCanUse;

    @JsonProperty("ThirdPartyDelivery")
    @XmlElement(name = "ThirdPartyDelivery")
    private ThirdPartyDeliveryType thirdPartyDelivery;

    /**
     * *配送方式（PJN不需要行程单及发票/PJS/SND/GET/AIR/CJS/CND）
     */
    public DeliveryTypeType getDeliveryType() {
        return this.deliveryType;
    }

    public void setDeliveryType(DeliveryTypeType deliveryType) {
        this.deliveryType = deliveryType;
    }

    /**
     * 可支付方式(配送接口提供)
     */
    public String getPayTypeCanUse() {
        return this.payTypeCanUse;
    }

    public void setPayTypeCanUse(String payTypeCanUse) {
        this.payTypeCanUse = payTypeCanUse;
    }

    /**
     * 邮寄行程单PJS,包括邮寄(平邮，挂号信)，第三方快递，EMS
     */
    public ThirdPartyDeliveryType getThirdPartyDelivery() {
        return this.thirdPartyDelivery;
    }

    public void setThirdPartyDelivery(ThirdPartyDeliveryType thirdPartyDelivery) {
        this.thirdPartyDelivery = thirdPartyDelivery;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DeliveryInfoType other = (DeliveryInfoType)obj;
        return
            Objects.equal(this.deliveryType, other.deliveryType) && 
            Objects.equal(this.payTypeCanUse, other.payTypeCanUse) && 
            Objects.equal(this.thirdPartyDelivery, other.thirdPartyDelivery);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.deliveryType);
        result = 31 * result + Objects.hashCode(this.payTypeCanUse);
        result = 31 * result + Objects.hashCode(this.thirdPartyDelivery);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("deliveryType", deliveryType)
            .add("payTypeCanUse", payTypeCanUse)
            .add("thirdPartyDelivery", thirdPartyDelivery)
            .toString();
    }

}
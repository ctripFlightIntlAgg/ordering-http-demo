/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightOrigDestType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "date",
    "orig",
    "dest"
})
@SuppressWarnings("all")
public class FlightOrigDestType implements Serializable {

    private static final long serialVersionUID = 1L;

    public FlightOrigDestType(
        String date, 
        String orig, 
        String dest) {
        this.date = date;
        this.orig = orig;
        this.dest = dest;
    }

    public FlightOrigDestType() {
    }

    @JsonProperty("Date")
    @XmlElement(name = "Date")
    private String date;

    @JsonProperty("ORIG")
    @XmlElement(name = "ORIG")
    private String orig;

    @JsonProperty("DEST")
    @XmlElement(name = "DEST")
    private String dest;

    /**
     * 出发日期 yyyy-MM-dd HH:mm:ss
     */
    public String getDate() {
        return this.date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    /**
     * 出发城市
     */
    public String getOrig() {
        return this.orig;
    }

    public void setOrig(String orig) {
        this.orig = orig;
    }

    /**
     * 到达城市
     */
    public String getDest() {
        return this.dest;
    }

    public void setDest(String dest) {
        this.dest = dest;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightOrigDestType other = (FlightOrigDestType)obj;
        return
            Objects.equal(this.date, other.date) && 
            Objects.equal(this.orig, other.orig) && 
            Objects.equal(this.dest, other.dest);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.date);
        result = 31 * result + Objects.hashCode(this.orig);
        result = 31 * result + Objects.hashCode(this.dest);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("date", date)
            .add("orig", orig)
            .add("dest", dest)
            .toString();
    }

}
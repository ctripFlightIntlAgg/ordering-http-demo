/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 外币信息，用于国际网站多币种
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ForeignCurrencyType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "currency",
    "exchangeRate",
    "carryType",
    "merchantInformation",
    "cnyCarry"
})
@SuppressWarnings("all")
public class ForeignCurrencyType implements Serializable {

    private static final long serialVersionUID = 1L;

    public ForeignCurrencyType(
        String currency, 
        BigDecimal exchangeRate, 
        BigDecimal carryType, 
        String merchantInformation, 
        short cnyCarry) {
        this.currency = currency;
        this.exchangeRate = exchangeRate;
        this.carryType = carryType;
        this.merchantInformation = merchantInformation;
        this.cnyCarry = cnyCarry;
    }

    public ForeignCurrencyType() {
        this.exchangeRate = new BigDecimal(0);
        this.carryType = new BigDecimal(0);
    }

    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @JsonProperty("ExchangeRate")
    @XmlElement(name = "ExchangeRate")
    private BigDecimal exchangeRate;

    @JsonProperty("CarryType")
    @XmlElement(name = "CarryType")
    private BigDecimal carryType;

    @JsonProperty("MerchantInformation")
    @XmlElement(name = "MerchantInformation")
    private String merchantInformation;

    @JsonProperty("CnyCarry")
    @XmlElement(name = "CnyCarry")
    private short cnyCarry;

    /**
     * 币种单位
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 汇率(对人民币汇率)
     */
    public BigDecimal getExchangeRate() {
        return this.exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    /**
     * 进位保留位数(如果保留小数点后2位，传递0.01,如果保留十位，传递10，依次类推)
     */
    public BigDecimal getCarryType() {
        return this.carryType;
    }

    public void setCarryType(BigDecimal carryType) {
        this.carryType = carryType;
    }

    /**
     * 英网商户信息
     */
    public String getMerchantInformation() {
        return this.merchantInformation;
    }

    public void setMerchantInformation(String merchantInformation) {
        this.merchantInformation = merchantInformation;
    }

    /**
     * 外币精度
     */
    public short getCnyCarry() {
        return this.cnyCarry;
    }

    public void setCnyCarry(short cnyCarry) {
        this.cnyCarry = cnyCarry;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ForeignCurrencyType other = (ForeignCurrencyType)obj;
        return
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.exchangeRate, other.exchangeRate) && 
            Objects.equal(this.carryType, other.carryType) && 
            Objects.equal(this.merchantInformation, other.merchantInformation) && 
            Objects.equal(this.cnyCarry, other.cnyCarry);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.exchangeRate);
        result = 31 * result + Objects.hashCode(this.carryType);
        result = 31 * result + Objects.hashCode(this.merchantInformation);
        result = 31 * result + Objects.hashCode(this.cnyCarry);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("currency", currency)
            .add("exchangeRate", exchangeRate)
            .add("carryType", carryType)
            .add("merchantInformation", merchantInformation)
            .add("cnyCarry", cnyCarry)
            .toString();
    }

}
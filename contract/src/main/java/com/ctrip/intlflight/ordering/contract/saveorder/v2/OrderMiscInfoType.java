/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.ctrip.intlflight.ordering.contract.commontype.v1.TagType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         订单信息综合信息
 *       
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrderMiscInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "salesOrderID",
    "needQuickBooking",
    "offlineMiscInfo",
    "localeID",
    "sourceURL",
    "additionalComments",
    "invoiceList",
    "affiliateInfo",
    "versionFlag",
    "reservationInfo",
    "checkRiskInfo",
    "isAdultAccompany",
    "bookingProductDesc",
    "merchantID",
    "bookingValidationTokenNumber",
    "abTestInfo",
    "foreignCurrency",
    "extendInfo",
    "locale",
    "unaccompaniedAgeRange",
    "memberType"
})
@SuppressWarnings("all")
public class OrderMiscInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public OrderMiscInfoType(
        Long salesOrderID, 
        boolean needQuickBooking, 
        OfflineMiscInfoType offlineMiscInfo, 
        int localeID, 
        String sourceURL, 
        String additionalComments, 
        List<InvoiceType> invoiceList, 
        AffiliateInfoType affiliateInfo, 
        int versionFlag, 
        contract.saveorder.v2.ReservationInfoType reservationInfo,
        CheckRiskInfoType checkRiskInfo, 
        String isAdultAccompany, 
        String bookingProductDesc, 
        int merchantID, 
        String bookingValidationTokenNumber, 
        List<ABTestType> abTestInfo, 
        ForeignCurrencyType foreignCurrency, 
        List<TagType> extendInfo,
        String locale, 
        String unaccompaniedAgeRange, 
        int memberType) {
        this.salesOrderID = salesOrderID;
        this.needQuickBooking = needQuickBooking;
        this.offlineMiscInfo = offlineMiscInfo;
        this.localeID = localeID;
        this.sourceURL = sourceURL;
        this.additionalComments = additionalComments;
        this.invoiceList = invoiceList;
        this.affiliateInfo = affiliateInfo;
        this.versionFlag = versionFlag;
        this.reservationInfo = reservationInfo;
        this.checkRiskInfo = checkRiskInfo;
        this.isAdultAccompany = isAdultAccompany;
        this.bookingProductDesc = bookingProductDesc;
        this.merchantID = merchantID;
        this.bookingValidationTokenNumber = bookingValidationTokenNumber;
        this.abTestInfo = abTestInfo;
        this.foreignCurrency = foreignCurrency;
        this.extendInfo = extendInfo;
        this.locale = locale;
        this.unaccompaniedAgeRange = unaccompaniedAgeRange;
        this.memberType = memberType;
    }

    public OrderMiscInfoType() {
    }

    @JsonProperty("SalesOrderID")
    @XmlElement(name = "SalesOrderID", nillable = true)
    private Long salesOrderID;

    @JsonProperty("NeedQuickBooking")
    @XmlElement(name = "NeedQuickBooking")
    private boolean needQuickBooking;

    @JsonProperty("OfflineMiscInfo")
    @XmlElement(name = "OfflineMiscInfo")
    private OfflineMiscInfoType offlineMiscInfo;

    @JsonProperty("LocaleID")
    @XmlElement(name = "LocaleID")
    private int localeID;

    @JsonProperty("SourceURL")
    @XmlElement(name = "SourceURL")
    private String sourceURL;

    @JsonProperty("AdditionalComments")
    @XmlElement(name = "AdditionalComments")
    private String additionalComments;

    @JsonProperty("InvoiceList")
    @XmlElement(name = "Invoice")
    @XmlElementWrapper(name = "InvoiceList")
    private List<InvoiceType> invoiceList;

    @JsonProperty("AffiliateInfo")
    @XmlElement(name = "AffiliateInfo")
    private AffiliateInfoType affiliateInfo;

    @JsonProperty("VersionFlag")
    @XmlElement(name = "VersionFlag")
    private int versionFlag;

    @JsonProperty("ReservationInfo")
    @XmlElement(name = "ReservationInfo")
    private contract.saveorder.v2.ReservationInfoType reservationInfo;

    @JsonProperty("CheckRiskInfo")
    @XmlElement(name = "CheckRiskInfo")
    private CheckRiskInfoType checkRiskInfo;

    @JsonProperty("IsAdultAccompany")
    @XmlElement(name = "IsAdultAccompany")
    private String isAdultAccompany;

    @JsonProperty("BookingProductDesc")
    @XmlElement(name = "BookingProductDesc")
    private String bookingProductDesc;

    @JsonProperty("MerchantID")
    @XmlElement(name = "MerchantID")
    private int merchantID;

    @JsonProperty("BookingValidationTokenNumber")
    @XmlElement(name = "BookingValidationTokenNumber")
    private String bookingValidationTokenNumber;

    @JsonProperty("ABTestInfo")
    @XmlElement(name = "ABTestList")
    @XmlElementWrapper(name = "ABTestInfo")
    private List<ABTestType> abTestInfo;

    @JsonProperty("ForeignCurrency")
    @XmlElement(name = "ForeignCurrency")
    private ForeignCurrencyType foreignCurrency;

    @JsonProperty("ExtendInfo")
    @XmlElement(name = "Tag", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:commontype:v1")
    @XmlElementWrapper(name = "ExtendInfo")
    private List<TagType> extendInfo;

    @JsonProperty("Locale")
    @XmlElement(name = "Locale")
    private String locale;

    @JsonProperty("UnaccompaniedAgeRange")
    @XmlElement(name = "UnaccompaniedAgeRange")
    private String unaccompaniedAgeRange;

    @JsonProperty("MemberType")
    @XmlElement(name = "MemberType")
    private int memberType;

    /**
     * 机酒，度假，商旅等系统的关联order id
     */
    public Long getSalesOrderID() {
        return this.salesOrderID;
    }

    public void setSalesOrderID(Long salesOrderID) {
        this.salesOrderID = salesOrderID;
    }

    /**
     * 是否快速预订（不登录直接下单）
     */
    public boolean getNeedQuickBooking() {
        return this.needQuickBooking;
    }

    public void setNeedQuickBooking(boolean needQuickBooking) {
        this.needQuickBooking = needQuickBooking;
    }

    /**
     * Offline接入需要信息
     */
    public OfflineMiscInfoType getOfflineMiscInfo() {
        return this.offlineMiscInfo;
    }

    public void setOfflineMiscInfo(OfflineMiscInfoType offlineMiscInfo) {
        this.offlineMiscInfo = offlineMiscInfo;
    }

    /**
     * 语种: 0x0004(简体中文) 0x7C04(繁体中文) 0x409(美国英语)
     *     (http://msdn.microsoft.com/en-us/library/windows/desktop/dd318693(v=vs.85).aspx/
     *     http://msdn.microsoft.com/en-us/library/ms912047(v=WinEmbedded.10).aspx)
     */
    public int getLocaleID() {
        return this.localeID;
    }

    public void setLocaleID(int localeID) {
        this.localeID = localeID;
    }

    /**
     * 订单来源URL
     */
    public String getSourceURL() {
        return this.sourceURL;
    }

    public void setSourceURL(String sourceURL) {
        this.sourceURL = sourceURL;
    }

    /**
     * 下单附加信息（页面输入的订单备注）
     */
    public String getAdditionalComments() {
        return this.additionalComments;
    }

    public void setAdditionalComments(String additionalComments) {
        this.additionalComments = additionalComments;
    }

    /**
     * 发票信息集合
     */
    public List<InvoiceType> getInvoiceList() {
        return this.invoiceList;
    }

    public void setInvoiceList(List<InvoiceType> invoiceList) {
        this.invoiceList = invoiceList;
    }

    /**
     * 分销联盟有关信息
     */
    public AffiliateInfoType getAffiliateInfo() {
        return this.affiliateInfo;
    }

    public void setAffiliateInfo(AffiliateInfoType affiliateInfo) {
        this.affiliateInfo = affiliateInfo;
    }

    /**
     * 简化下单接口传 1024，存储在O_OrderIntlExt，位操作
     */
    public int getVersionFlag() {
        return this.versionFlag;
    }

    public void setVersionFlag(int versionFlag) {
        this.versionFlag = versionFlag;
    }

    /**
     * 订位相关信息
     */
    public contract.saveorder.v2.ReservationInfoType getReservationInfo() {
        return this.reservationInfo;
    }

    public void setReservationInfo(contract.saveorder.v2.ReservationInfoType reservationInfo) {
        this.reservationInfo = reservationInfo;
    }

    /**
     * 风险控制信息
     */
    public CheckRiskInfoType getCheckRiskInfo() {
        return this.checkRiskInfo;
    }

    public void setCheckRiskInfo(CheckRiskInfoType checkRiskInfo) {
        this.checkRiskInfo = checkRiskInfo;
    }

    /**
     * 是否无成人陪伴
     */
    public String getIsAdultAccompany() {
        return this.isAdultAccompany;
    }

    public void setIsAdultAccompany(String isAdultAccompany) {
        this.isAdultAccompany = isAdultAccompany;
    }

    /**
     * 预定端产品销售名称
     */
    public String getBookingProductDesc() {
        return this.bookingProductDesc;
    }

    public void setBookingProductDesc(String bookingProductDesc) {
        this.bookingProductDesc = bookingProductDesc;
    }

    /**
     * 商旅商户号
     */
    public int getMerchantID() {
        return this.merchantID;
    }

    public void setMerchantID(int merchantID) {
        this.merchantID = merchantID;
    }

    /**
     * *BookingValidation的TokenNumber,根据此Token获取验舱验价的Token
     */
    public String getBookingValidationTokenNumber() {
        return this.bookingValidationTokenNumber;
    }

    public void setBookingValidationTokenNumber(String bookingValidationTokenNumber) {
        this.bookingValidationTokenNumber = bookingValidationTokenNumber;
    }

    /**
     * ABTest实验信息
     */
    public List<ABTestType> getAbTestInfo() {
        return this.abTestInfo;
    }

    public void setAbTestInfo(List<ABTestType> abTestInfo) {
        this.abTestInfo = abTestInfo;
    }

    /**
     * 外币信息(用于国际网站多币种)
     */
    public ForeignCurrencyType getForeignCurrency() {
        return this.foreignCurrency;
    }

    public void setForeignCurrency(ForeignCurrencyType foreignCurrency) {
        this.foreignCurrency = foreignCurrency;
    }

    /**
     * 扩展字段：由 key/value 组成，value 格式：JSON 商旅使用：AgencyDetail
     *     票台信息， ExtraCmdList 三方协议，用于统计订位
     */
    public List<TagType> getExtendInfo() {
        return this.extendInfo;
    }

    public void setExtendInfo(List<TagType> extendInfo) {
        this.extendInfo = extendInfo;
    }

    /**
     * 多语言, 如en_US,fr_FR等
     */
    public String getLocale() {
        return this.locale;
    }

    public void setLocale(String locale) {
        this.locale = locale;
    }

    /**
     * 无成人陪伴年龄范围，
     *     格式为：0-15-18，即15周岁以下乘机人单独乘机需要办理无成人陪伴手续，成人陪伴的最低年龄18周岁
     */
    public String getUnaccompaniedAgeRange() {
        return this.unaccompaniedAgeRange;
    }

    public void setUnaccompaniedAgeRange(String unaccompaniedAgeRange) {
        this.unaccompaniedAgeRange = unaccompaniedAgeRange;
    }

    /**
     * 会员类型，0：非会员  1：春秋会员价
     */
    public int getMemberType() {
        return this.memberType;
    }

    public void setMemberType(int memberType) {
        this.memberType = memberType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final OrderMiscInfoType other = (OrderMiscInfoType)obj;
        return
            Objects.equal(this.salesOrderID, other.salesOrderID) && 
            Objects.equal(this.needQuickBooking, other.needQuickBooking) && 
            Objects.equal(this.offlineMiscInfo, other.offlineMiscInfo) && 
            Objects.equal(this.localeID, other.localeID) && 
            Objects.equal(this.sourceURL, other.sourceURL) && 
            Objects.equal(this.additionalComments, other.additionalComments) && 
            Objects.equal(this.invoiceList, other.invoiceList) && 
            Objects.equal(this.affiliateInfo, other.affiliateInfo) && 
            Objects.equal(this.versionFlag, other.versionFlag) && 
            Objects.equal(this.reservationInfo, other.reservationInfo) && 
            Objects.equal(this.checkRiskInfo, other.checkRiskInfo) && 
            Objects.equal(this.isAdultAccompany, other.isAdultAccompany) && 
            Objects.equal(this.bookingProductDesc, other.bookingProductDesc) && 
            Objects.equal(this.merchantID, other.merchantID) && 
            Objects.equal(this.bookingValidationTokenNumber, other.bookingValidationTokenNumber) && 
            Objects.equal(this.abTestInfo, other.abTestInfo) && 
            Objects.equal(this.foreignCurrency, other.foreignCurrency) && 
            Objects.equal(this.extendInfo, other.extendInfo) && 
            Objects.equal(this.locale, other.locale) && 
            Objects.equal(this.unaccompaniedAgeRange, other.unaccompaniedAgeRange) && 
            Objects.equal(this.memberType, other.memberType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.salesOrderID);
        result = 31 * result + Objects.hashCode(this.needQuickBooking);
        result = 31 * result + Objects.hashCode(this.offlineMiscInfo);
        result = 31 * result + Objects.hashCode(this.localeID);
        result = 31 * result + Objects.hashCode(this.sourceURL);
        result = 31 * result + Objects.hashCode(this.additionalComments);
        result = 31 * result + Objects.hashCode(this.invoiceList);
        result = 31 * result + Objects.hashCode(this.affiliateInfo);
        result = 31 * result + Objects.hashCode(this.versionFlag);
        result = 31 * result + Objects.hashCode(this.reservationInfo);
        result = 31 * result + Objects.hashCode(this.checkRiskInfo);
        result = 31 * result + Objects.hashCode(this.isAdultAccompany);
        result = 31 * result + Objects.hashCode(this.bookingProductDesc);
        result = 31 * result + Objects.hashCode(this.merchantID);
        result = 31 * result + Objects.hashCode(this.bookingValidationTokenNumber);
        result = 31 * result + Objects.hashCode(this.abTestInfo);
        result = 31 * result + Objects.hashCode(this.foreignCurrency);
        result = 31 * result + Objects.hashCode(this.extendInfo);
        result = 31 * result + Objects.hashCode(this.locale);
        result = 31 * result + Objects.hashCode(this.unaccompaniedAgeRange);
        result = 31 * result + Objects.hashCode(this.memberType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("salesOrderID", salesOrderID)
            .add("needQuickBooking", needQuickBooking)
            .add("offlineMiscInfo", offlineMiscInfo)
            .add("localeID", localeID)
            .add("sourceURL", sourceURL)
            .add("additionalComments", additionalComments)
            .add("invoiceList", invoiceList)
            .add("affiliateInfo", affiliateInfo)
            .add("versionFlag", versionFlag)
            .add("reservationInfo", reservationInfo)
            .add("checkRiskInfo", checkRiskInfo)
            .add("isAdultAccompany", isAdultAccompany)
            .add("bookingProductDesc", bookingProductDesc)
            .add("merchantID", merchantID)
            .add("bookingValidationTokenNumber", bookingValidationTokenNumber)
            .add("abTestInfo", abTestInfo)
            .add("foreignCurrency", foreignCurrency)
            .add("extendInfo", extendInfo)
            .add("locale", locale)
            .add("unaccompaniedAgeRange", unaccompaniedAgeRange)
            .add("memberType", memberType)
            .toString();
    }

}
/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         支付类型
 *       
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PayInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "payType",
    "amount"
})
@SuppressWarnings("all")
public class PayInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public PayInfoType(
        String payType, 
        BigDecimal amount) {
        this.payType = payType;
        this.amount = amount;
    }

    public PayInfoType() {
        this.amount = new BigDecimal(0);
    }

    @JsonProperty("PayType")
    @XmlElement(name = "PayType")
    private String payType;

    @JsonProperty("Amount")
    @XmlElement(name = "Amount")
    private BigDecimal amount;

    /**
     * 支付类型
     */
    public String getPayType() {
        return this.payType;
    }

    public void setPayType(String payType) {
        this.payType = payType;
    }

    /**
     * 支付金额[Online客户端需要保存游票金额]
     */
    public BigDecimal getAmount() {
        return this.amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PayInfoType other = (PayInfoType)obj;
        return
            Objects.equal(this.payType, other.payType) && 
            Objects.equal(this.amount, other.amount);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.payType);
        result = 31 * result + Objects.hashCode(this.amount);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("payType", payType)
            .add("amount", amount)
            .toString();
    }

}
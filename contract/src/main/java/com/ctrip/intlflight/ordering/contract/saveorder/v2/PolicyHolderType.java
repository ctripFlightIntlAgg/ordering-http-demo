/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 投保人信息类型
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PolicyHolderType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "name",
    "idCardType",
    "cardNo",
    "mobile",
    "relationType",
    "birthday",
    "countryCode",
    "email"
})
@SuppressWarnings("all")
public class PolicyHolderType implements Serializable {

    private static final long serialVersionUID = 1L;

    public PolicyHolderType(
        String name, 
        String idCardType, 
        String cardNo, 
        String mobile, 
        String relationType, 
        String birthday, 
        String countryCode, 
        String email) {
        this.name = name;
        this.idCardType = idCardType;
        this.cardNo = cardNo;
        this.mobile = mobile;
        this.relationType = relationType;
        this.birthday = birthday;
        this.countryCode = countryCode;
        this.email = email;
    }

    public PolicyHolderType() {
    }

    @JsonProperty("Name")
    @XmlElement(name = "Name")
    private String name;

    @JsonProperty("IDCardType")
    @XmlElement(name = "IDCardType")
    private String idCardType;

    @JsonProperty("CardNo")
    @XmlElement(name = "CardNo")
    private String cardNo;

    @JsonProperty("Mobile")
    @XmlElement(name = "Mobile")
    private String mobile;

    @JsonProperty("RelationType")
    @XmlElement(name = "RelationType")
    private String relationType;

    @JsonProperty("Birthday")
    @XmlElement(name = "Birthday")
    private String birthday;

    @JsonProperty("CountryCode")
    @XmlElement(name = "CountryCode")
    private String countryCode;

    @JsonProperty("Email")
    @XmlElement(name = "Email")
    private String email;

    /**
     * 投保人姓名
     */
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * 证件类型（新）
     */
    public String getIdCardType() {
        return this.idCardType;
    }

    public void setIdCardType(String idCardType) {
        this.idCardType = idCardType;
    }

    /**
     * 证件号码
     */
    public String getCardNo() {
        return this.cardNo;
    }

    public void setCardNo(String cardNo) {
        this.cardNo = cardNo;
    }

    /**
     * 手机号码
     */
    public String getMobile() {
        return this.mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    /**
     * 和被保人关系，传值请严格按照 RelationTypeEnum 枚举 Name 传值
     */
    public String getRelationType() {
        return this.relationType;
    }

    public void setRelationType(String relationType) {
        this.relationType = relationType;
    }

    /**
     * 出生日期 yyyy-MM-dd
     */
    public String getBirthday() {
        return this.birthday;
    }

    public void setBirthday(String birthday) {
        this.birthday = birthday;
    }

    /**
     * 国家码(手机)
     */
    public String getCountryCode() {
        return this.countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    /**
     * 邮箱
     */
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PolicyHolderType other = (PolicyHolderType)obj;
        return
            Objects.equal(this.name, other.name) && 
            Objects.equal(this.idCardType, other.idCardType) && 
            Objects.equal(this.cardNo, other.cardNo) && 
            Objects.equal(this.mobile, other.mobile) && 
            Objects.equal(this.relationType, other.relationType) && 
            Objects.equal(this.birthday, other.birthday) && 
            Objects.equal(this.countryCode, other.countryCode) && 
            Objects.equal(this.email, other.email);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.name);
        result = 31 * result + Objects.hashCode(this.idCardType);
        result = 31 * result + Objects.hashCode(this.cardNo);
        result = 31 * result + Objects.hashCode(this.mobile);
        result = 31 * result + Objects.hashCode(this.relationType);
        result = 31 * result + Objects.hashCode(this.birthday);
        result = 31 * result + Objects.hashCode(this.countryCode);
        result = 31 * result + Objects.hashCode(this.email);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("name", name)
            .add("idCardType", idCardType)
            .add("cardNo", cardNo)
            .add("mobile", mobile)
            .add("relationType", relationType)
            .add("birthday", birthday)
            .add("countryCode", countryCode)
            .add("email", email)
            .toString();
    }

}
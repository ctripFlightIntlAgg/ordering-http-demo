/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         订单类型
 *       
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PostponeFeeType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "valueAddedType",
    "refRevOrderID"
})
@SuppressWarnings("all")
public class PostponeFeeType implements Serializable {

    private static final long serialVersionUID = 1L;

    public PostponeFeeType(
        String valueAddedType, 
        long refRevOrderID) {
        this.valueAddedType = valueAddedType;
        this.refRevOrderID = refRevOrderID;
    }

    public PostponeFeeType() {
    }

    @JsonProperty("ValueAddedType")
    @XmlElement(name = "ValueAddedType")
    private String valueAddedType;

    @JsonProperty("RefRevOrderID")
    @XmlElement(name = "RefRevOrderID")
    private long refRevOrderID;

    /**
     * ‘C’表示改期收费单，‘A‘表示增值服务单
     */
    public String getValueAddedType() {
        return this.valueAddedType;
    }

    public void setValueAddedType(String valueAddedType) {
        this.valueAddedType = valueAddedType;
    }

    /**
     * 改期收费关联订单
     */
    public long getRefRevOrderID() {
        return this.refRevOrderID;
    }

    public void setRefRevOrderID(long refRevOrderID) {
        this.refRevOrderID = refRevOrderID;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PostponeFeeType other = (PostponeFeeType)obj;
        return
            Objects.equal(this.valueAddedType, other.valueAddedType) && 
            Objects.equal(this.refRevOrderID, other.refRevOrderID);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.valueAddedType);
        result = 31 * result + Objects.hashCode(this.refRevOrderID);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("valueAddedType", valueAddedType)
            .add("refRevOrderID", refRevOrderID)
            .toString();
    }

}
// Generated by eBay Common SDK Platform
package contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 值机座位偏好
 */
@XmlType(name = "PreferenceEnum")
@XmlEnum
@SuppressWarnings("all")
public enum PreferenceEnum {

    /**
     * 无烟靠走廊座位
     */
    @XmlEnumValue("NSSA")
    NSSA(0, "NSSA"),

    /**
     * 无烟靠窗座位
     */
    @XmlEnumValue("NSSW")
    NSSW(1, "NSSW"),

    /**
     * 无烟座位
     */
    @XmlEnumValue("NSST")
    NSST(2, "NSST"),

    /**
     * 吸烟靠走廊座位
     */
    @XmlEnumValue("SMSA")
    SMSA(3, "SMSA"),

    /**
     * 吸烟座位
     */
    @XmlEnumValue("SMST")
    SMST(4, "SMST"),

    /**
     * 额外座位
     */
    @XmlEnumValue("EXST")
    EXST(5, "EXST"),

    /**
     * 相邻座位
     */
    @XmlEnumValue("ABST")
    ABST(6, "ABST"),

    /**
     * 随机座位
     */
    @XmlEnumValue("RAND")
    RAND(7, "RAND");

    private final int intValue;
    private final String value;

    PreferenceEnum(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    public static PreferenceEnum fromValue(String v) {
        for (PreferenceEnum e: PreferenceEnum.values()) {
            if (e.value.equalsIgnoreCase(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static PreferenceEnum findByValue(int value) {
        switch (value) {
            case 0:
                return NSSA;
            case 1:
                return NSSW;
            case 2:
                return NSST;
            case 3:
                return SMSA;
            case 4:
                return SMST;
            case 5:
                return EXST;
            case 6:
                return ABST;
            case 7:
                return RAND;
            default:
                return null;
        }
    }
}
// Generated by eBay Common SDK Platform
package contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 保险投保人与被保人关系类型
 */
@XmlType(name = "RelationTypeEnum")
@XmlEnum
@SuppressWarnings("all")
public enum RelationTypeEnum {

    /**
     * 本人
     */
    @XmlEnumValue("SELF")
    SELF(0, "SELF"),

    /**
     * 配偶
     */
    @XmlEnumValue("COUPLE")
    COUPLE(1, "COUPLE"),

    /**
     * 父母
     */
    @XmlEnumValue("PARENT")
    PARENT(2, "PARENT"),

    /**
     * 子女
     */
    @XmlEnumValue("CHILD")
    CHILD(3, "CHILD"),

    /**
     * 兄弟姐妹
     */
    @XmlEnumValue("BROSIS")
    BROSIS(4, "BROSIS"),

    /**
     * 其他
     */
    @XmlEnumValue("OTHER")
    OTHER(5, "OTHER"),

    /**
     * 未知
     */
    @XmlEnumValue("UNKNOWN")
    UNKNOWN(6, "UNKNOWN");

    private final int intValue;
    private final String value;

    RelationTypeEnum(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    public static RelationTypeEnum fromValue(String v) {
        for (RelationTypeEnum e: RelationTypeEnum.values()) {
            if (e.value.equalsIgnoreCase(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static RelationTypeEnum findByValue(int value) {
        switch (value) {
            case 0:
                return SELF;
            case 1:
                return COUPLE;
            case 2:
                return PARENT;
            case 3:
                return CHILD;
            case 4:
                return BROSIS;
            case 5:
                return OTHER;
            case 6:
                return UNKNOWN;
            default:
                return null;
        }
    }
}
// Generated by eBay Common SDK Platform
package contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 产品售卖模式
 */
@XmlType(name = "SaleModeEnum")
@XmlEnum
@SuppressWarnings("all")
public enum SaleModeEnum {

    /**
     * 打包
     */
    @XmlEnumValue("Package")
    Package(0, "Package"),

    /**
     * 答题赠送
     */
    @XmlEnumValue("Gift")
    Gift(1, "Gift"),

    /**
     * 默认正常购买
     */
    @XmlEnumValue("Normal")
    Normal(2, "Normal"),

    /**
     * 免费赠送
     */
    @XmlEnumValue("COST_FREE")
    COST_FREE(3, "COST_FREE"),

    /**
     * 3选X售卖
     */
    @XmlEnumValue("BINDING")
    BINDING(4, "BINDING"),

    /**
     * 定赠减活动
     */
    @XmlEnumValue("MARKET")
    MARKET(5, "MARKET");

    private final int intValue;
    private final String value;

    SaleModeEnum(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    public static SaleModeEnum fromValue(String v) {
        for (SaleModeEnum e: SaleModeEnum.values()) {
            if (e.value.equalsIgnoreCase(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static SaleModeEnum findByValue(int value) {
        switch (value) {
            case 0:
                return Package;
            case 1:
                return Gift;
            case 2:
                return Normal;
            case 3:
                return COST_FREE;
            case 4:
                return BINDING;
            case 5:
                return MARKET;
            default:
                return null;
        }
    }
}
/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 渠道信息
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SalesTypeInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "groupFlag",
    "salesType"
})
@SuppressWarnings("all")
public class SalesTypeInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public SalesTypeInfoType(
        String groupFlag, 
        SalesTypeType salesType) {
        this.groupFlag = groupFlag;
        this.salesType = salesType;
    }

    public SalesTypeInfoType() {
        this.salesType = SalesTypeType.values()[0];
    }

    @JsonProperty("GroupFlag")
    @XmlElement(name = "GroupFlag")
    private String groupFlag;

    @JsonProperty("SalesType")
    @XmlElement(name = "SalesType")
    private SalesTypeType salesType;

    /**
     * 团队标记
     */
    public String getGroupFlag() {
        return this.groupFlag;
    }

    public void setGroupFlag(String groupFlag) {
        this.groupFlag = groupFlag;
    }

    /**
     * 渠道类型(Offline可选择类型)
     */
    public SalesTypeType getSalesType() {
        return this.salesType;
    }

    public void setSalesType(SalesTypeType salesType) {
        this.salesType = salesType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final SalesTypeInfoType other = (SalesTypeInfoType)obj;
        return
            Objects.equal(this.groupFlag, other.groupFlag) && 
            Objects.equal(this.salesType, other.salesType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.groupFlag);
        result = 31 * result + Objects.hashCode(this.salesType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("groupFlag", groupFlag)
            .add("salesType", salesType)
            .toString();
    }

}
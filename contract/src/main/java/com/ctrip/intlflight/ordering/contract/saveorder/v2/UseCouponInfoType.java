/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 使用优惠券信息
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UseCouponInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "couponNumber",
    "applicableProduct",
    "currency",
    "cardSection",
    "orderForeignAmount",
    "couponAmount"
})
@SuppressWarnings("all")
public class UseCouponInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public UseCouponInfoType(
        String couponNumber, 
        String applicableProduct, 
        String currency, 
        String cardSection, 
        BigDecimal orderForeignAmount, 
        BigDecimal couponAmount) {
        this.couponNumber = couponNumber;
        this.applicableProduct = applicableProduct;
        this.currency = currency;
        this.cardSection = cardSection;
        this.orderForeignAmount = orderForeignAmount;
        this.couponAmount = couponAmount;
    }

    public UseCouponInfoType() {
        this.orderForeignAmount = new BigDecimal(0);
        this.couponAmount = new BigDecimal(0);
    }

    @JsonProperty("CouponNumber")
    @XmlElement(name = "CouponNumber")
    private String couponNumber;

    @JsonProperty("ApplicableProduct")
    @XmlElement(name = "ApplicableProduct")
    private String applicableProduct;

    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @JsonProperty("CardSection")
    @XmlElement(name = "CardSection")
    private String cardSection;

    @JsonProperty("OrderForeignAmount")
    @XmlElement(name = "OrderForeignAmount")
    private BigDecimal orderForeignAmount;

    @JsonProperty("CouponAmount")
    @XmlElement(name = "CouponAmount")
    private BigDecimal couponAmount;

    /**
     * 优惠券码
     */
    public String getCouponNumber() {
        return this.couponNumber;
    }

    public void setCouponNumber(String couponNumber) {
        this.couponNumber = couponNumber;
    }

    /**
     * 优惠券适用产品, 传值请严格按照 XProductTypeEnum 枚举 Name 传值, 如
     *             AIR_TICKET-机票；AIRPORT_TRANSFERS-接送机；LOUNGE-休息室
     */
    public String getApplicableProduct() {
        return this.applicableProduct;
    }

    public void setApplicableProduct(String applicableProduct) {
        this.applicableProduct = applicableProduct;
    }

    /**
     * 优惠劵币种信息
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 银行卡优惠券信息卡段信息
     */
    public String getCardSection() {
        return this.cardSection;
    }

    public void setCardSection(String cardSection) {
        this.cardSection = cardSection;
    }

    /**
     * 外币订单总金额(使用外币优惠券时，需要传入)
     */
    public BigDecimal getOrderForeignAmount() {
        return this.orderForeignAmount;
    }

    public void setOrderForeignAmount(BigDecimal orderForeignAmount) {
        this.orderForeignAmount = orderForeignAmount;
    }

    /**
     * 外币优惠券人民币价格
     */
    public BigDecimal getCouponAmount() {
        return this.couponAmount;
    }

    public void setCouponAmount(BigDecimal couponAmount) {
        this.couponAmount = couponAmount;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final UseCouponInfoType other = (UseCouponInfoType)obj;
        return
            Objects.equal(this.couponNumber, other.couponNumber) && 
            Objects.equal(this.applicableProduct, other.applicableProduct) && 
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.cardSection, other.cardSection) && 
            Objects.equal(this.orderForeignAmount, other.orderForeignAmount) && 
            Objects.equal(this.couponAmount, other.couponAmount);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.couponNumber);
        result = 31 * result + Objects.hashCode(this.applicableProduct);
        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.cardSection);
        result = 31 * result + Objects.hashCode(this.orderForeignAmount);
        result = 31 * result + Objects.hashCode(this.couponAmount);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("couponNumber", couponNumber)
            .add("applicableProduct", applicableProduct)
            .add("currency", currency)
            .add("cardSection", cardSection)
            .add("orderForeignAmount", orderForeignAmount)
            .add("couponAmount", couponAmount)
            .toString();
    }

}
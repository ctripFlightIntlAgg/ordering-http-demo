/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * X产品对应的航班信息
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "XFlightInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "itineraryID",
    "sectorID",
    "flightNo",
    "takeoffDateTime"
})
@SuppressWarnings("all")
public class XFlightInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public XFlightInfoType(
        int itineraryID, 
        int sectorID, 
        String flightNo, 
        String takeoffDateTime) {
        this.itineraryID = itineraryID;
        this.sectorID = sectorID;
        this.flightNo = flightNo;
        this.takeoffDateTime = takeoffDateTime;
    }

    public XFlightInfoType() {
    }

    @JsonProperty("ItineraryID")
    @XmlElement(name = "ItineraryID")
    private int itineraryID;

    @JsonProperty("SectorID")
    @XmlElement(name = "SectorID")
    private int sectorID;

    @JsonProperty("FlightNo")
    @XmlElement(name = "FlightNo")
    private String flightNo;

    @JsonProperty("TakeoffDateTime")
    @XmlElement(name = "TakeoffDateTime")
    private String takeoffDateTime;

    /**
     * 行程号（与查询的一致）
     */
    public int getItineraryID() {
        return this.itineraryID;
    }

    public void setItineraryID(int itineraryID) {
        this.itineraryID = itineraryID;
    }

    /**
     * 航段号（与查询的一致）
     */
    public int getSectorID() {
        return this.sectorID;
    }

    public void setSectorID(int sectorID) {
        this.sectorID = sectorID;
    }

    /**
     * 航班号
     */
    public String getFlightNo() {
        return this.flightNo;
    }

    public void setFlightNo(String flightNo) {
        this.flightNo = flightNo;
    }

    /**
     * 起飞时间
     */
    public String getTakeoffDateTime() {
        return this.takeoffDateTime;
    }

    public void setTakeoffDateTime(String takeoffDateTime) {
        this.takeoffDateTime = takeoffDateTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final XFlightInfoType other = (XFlightInfoType)obj;
        return
            Objects.equal(this.itineraryID, other.itineraryID) && 
            Objects.equal(this.sectorID, other.sectorID) && 
            Objects.equal(this.flightNo, other.flightNo) && 
            Objects.equal(this.takeoffDateTime, other.takeoffDateTime);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.itineraryID);
        result = 31 * result + Objects.hashCode(this.sectorID);
        result = 31 * result + Objects.hashCode(this.flightNo);
        result = 31 * result + Objects.hashCode(this.takeoffDateTime);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("itineraryID", itineraryID)
            .add("sectorID", sectorID)
            .add("flightNo", flightNo)
            .add("takeoffDateTime", takeoffDateTime)
            .toString();
    }

}
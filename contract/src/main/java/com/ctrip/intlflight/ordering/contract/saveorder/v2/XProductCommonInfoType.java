/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.intlflight.ordering.contract.saveorder.v2;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 *         X产品公共信息
 *       
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "XProductCommonInfoType", namespace = "urn:com:ctrip:flight:intl:booking:order:contract:saveorder:v2", propOrder = {
    "productToken",
    "saleMode",
    "flightList",
    "count",
    "promotionCode",
    "usePromotionRefID",
    "subProductToken"
})
@SuppressWarnings("all")
public class XProductCommonInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public XProductCommonInfoType(
        String productToken, 
        String saleMode, 
        List<XFlightInfoType> flightList, 
        int count, 
        String promotionCode, 
        String usePromotionRefID, 
        String subProductToken) {
        this.productToken = productToken;
        this.saleMode = saleMode;
        this.flightList = flightList;
        this.count = count;
        this.promotionCode = promotionCode;
        this.usePromotionRefID = usePromotionRefID;
        this.subProductToken = subProductToken;
    }

    public XProductCommonInfoType() {
    }

    @JsonProperty("ProductToken")
    @XmlElement(name = "ProductToken")
    private String productToken;

    @JsonProperty("SaleMode")
    @XmlElement(name = "SaleMode")
    private String saleMode;

    @JsonProperty("FlightList")
    @XmlElement(name = "XFlightInfo")
    @XmlElementWrapper(name = "FlightList")
    private List<XFlightInfoType> flightList;

    @JsonProperty("Count")
    @XmlElement(name = "Count")
    private int count;

    @JsonProperty("PromotionCode")
    @XmlElement(name = "PromotionCode")
    private String promotionCode;

    @JsonProperty("UsePromotionRefID")
    @XmlElement(name = "UsePromotionRefID")
    private String usePromotionRefID;

    @JsonProperty("SubProductToken")
    @XmlElement(name = "SubProductToken")
    private String subProductToken;

    /**
     * 产品Token
     */
    public String getProductToken() {
        return this.productToken;
    }

    public void setProductToken(String productToken) {
        this.productToken = productToken;
    }

    /**
     * 售卖模式，传值请严格按照 SaleModeEnum 枚举 Name 传值
     */
    public String getSaleMode() {
        return this.saleMode;
    }

    public void setSaleMode(String saleMode) {
        this.saleMode = saleMode;
    }

    /**
     * X 产品航班信息列表
     */
    public List<XFlightInfoType> getFlightList() {
        return this.flightList;
    }

    public void setFlightList(List<XFlightInfoType> flightList) {
        this.flightList = flightList;
    }

    /**
     * 数量
     */
    public int getCount() {
        return this.count;
    }

    public void setCount(int count) {
        this.count = count;
    }

    /**
     * 优惠活动Code
     */
    public String getPromotionCode() {
        return this.promotionCode;
    }

    public void setPromotionCode(String promotionCode) {
        this.promotionCode = promotionCode;
    }

    /**
     * 使用优惠的唯一标识符，对应UsePromotionInfoType节点下的ReferenceID
     */
    public String getUsePromotionRefID() {
        return this.usePromotionRefID;
    }

    public void setUsePromotionRefID(String usePromotionRefID) {
        this.usePromotionRefID = usePromotionRefID;
    }

    /**
     * X 产品附加信息Token
     */
    public String getSubProductToken() {
        return this.subProductToken;
    }

    public void setSubProductToken(String subProductToken) {
        this.subProductToken = subProductToken;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final XProductCommonInfoType other = (XProductCommonInfoType)obj;
        return
            Objects.equal(this.productToken, other.productToken) && 
            Objects.equal(this.saleMode, other.saleMode) && 
            Objects.equal(this.flightList, other.flightList) && 
            Objects.equal(this.count, other.count) && 
            Objects.equal(this.promotionCode, other.promotionCode) && 
            Objects.equal(this.usePromotionRefID, other.usePromotionRefID) && 
            Objects.equal(this.subProductToken, other.subProductToken);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.productToken);
        result = 31 * result + Objects.hashCode(this.saleMode);
        result = 31 * result + Objects.hashCode(this.flightList);
        result = 31 * result + Objects.hashCode(this.count);
        result = 31 * result + Objects.hashCode(this.promotionCode);
        result = 31 * result + Objects.hashCode(this.usePromotionRefID);
        result = 31 * result + Objects.hashCode(this.subProductToken);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("productToken", productToken)
            .add("saleMode", saleMode)
            .add("flightList", flightList)
            .add("count", count)
            .add("promotionCode", promotionCode)
            .add("usePromotionRefID", usePromotionRefID)
            .add("subProductToken", subProductToken)
            .toString();
    }

}